name: Build, Test, and Publish Spring Boot Application

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-native:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    env:
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
    permissions:
      contents: read
      packages: write
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Snyk
      - name: Set up Snyk
        uses: snyk/actions/setup@master

      # Set up JDK 17 with GraalVM
      - name: Set up JDK 17 with GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'liberica'
          version: '22.3.0'
          java-version: '17'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      # Get branch name
      - name: Get Branch Name
        id: get_branch
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF} | awk -F'/' '{print $3}')" >> $GITHUB_ENV

      # Print Java and Maven versions
      - name: Print Java and Maven Version
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version
          mvn --version

      # Configure Maven for GitHub Packages
      - name: Configure Maven for GitHub Packages
        run: |
          mkdir -p ~/.m2
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
                  <servers>
                    <server>
                      <id>github</id>
                      <username>${{ github.actor }}</username>
                      <password>${{ secrets.GITHUB_TOKEN }}</password>
                    </server>
                  </servers>
                </settings>' > ~/.m2/settings.xml

      # Download dependencies
      - name: Download Dependencies
        run: mvn dependency:go-offline

      # Run Snyk security test and monitor
      - name: Snyk Test and Monitor
        continue-on-error: true
        run: |
          snyk test --all-projects
          snyk monitor --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Run tests
      - name: Run Tests
        run: mvn -ntp clean verify

      # Run quality analysis
      - name: Quality Analysis
        run: mvn -ntp -Psonar initialize sonar:sonar -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      # Compile to native image
      - name: Compile to Native Image
        run: mvn -Pnative native:compile

      # Upload JAR file
      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-${{ env.BRANCH_NAME }}-jar
          path: target/*.jar

      # Upload Linux binary
      - name: Upload Linux Binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-${{ env.BRANCH_NAME }}-exec-linux
          path: target/*-exec

      # Build and Publish Docker Image using Spring Boot Maven Plugin
      - name: Build and Publish Docker Image
        run: |
          mvn -ntp -Pnative spring-boot:build-image -Dspring-boot.build-image.publish=true -Ddocker.username=${{ secrets.DOCKER_USERNAME }} -Ddocker.password=${{ secrets.DOCKER_PASSWORD }} -Dspring-boot.build-image.imageName=docker.io/${{ secrets.DOCKER_USERNAME }}/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ env.BRANCH_NAME }} -DskipTests

  build-native-macos:
    needs: build-native
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up JDK 17 with GraalVM
      - name: Set up JDK 17 with GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'liberica'
          version: '22.3.0'
          java-version: '17'
          cache: 'maven'

      # Get branch name
      - name: Get Branch Name
        id: get_branch
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF} | awk -F'/' '{print $3}')" >> $GITHUB_ENV

      # Print Java and Maven versions
      - name: Print Java and Maven Version
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version
          mvn --version

      # Compile to native image
      - name: Compile to Native Image
        run: mvn -Pnative native:compile

      # Upload compiled binary
      - name: Upload Compiled Binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-${{ env.BRANCH_NAME }}-exec-macos
          path: target/*-exec