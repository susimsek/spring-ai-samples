name: Application Test, Sonar and Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    env:
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Snyk
        uses: snyk/actions/setup@master

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          version: '22.3.0'
          java-version: '17'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          components: native-image
          cache: 'maven'

      - name: Print Java Version
        run: java -version

      - name: Download Dependencies
        run: mvn dependency:go-offline

      - name: Snyk test
        continue-on-error: true
        run: snyk test --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Snyk monitor
        continue-on-error: true
        run: snyk monitor --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Tests
        run: mvn -ntp clean verify

      - name: Quality Analysis
        run: mvn -ntp -Psonar initialize sonar:sonar -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      - name: Deploy to GitHub Packages
        run: mvn deploy -Dgpg.skip -Dgithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Publish Docker Image
        run: mvn -ntp -Pnative spring-boot:build-image -Dspring-boot.build-image.publish=true -Ddocker.username=${{ secrets.DOCKER_USERNAME }} -Ddocker.password=${{ secrets.DOCKER_PASSWORD }} -Dspring-boot.build-image.imageName=docker.io/${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:s17 -DskipTests