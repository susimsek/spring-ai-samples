server:
  port: 8071
  shutdown: graceful
  compression:
    enabled: true
    min-response-size: 1024
    mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/json,image/svg+xml
spring:
  hateoas:
    use-hal-as-default-json-media-type: false
  datasource:
    url: jdbc:h2:mem:springaidb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;
    username: springai
    password: root
    hikari:
      maximum-pool-size: 30
      minimum-idle: 1
      pool-name: Hikari
      auto-commit: false
  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    show-sql: true
    open-in-view: false
    properties:
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.use_query_cache: true
      hibernate.generate_statistics: false
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
      jakarta.persistence.sharedCache.mode: ENABLE_SELECTIVE
  h2:
    console:
      enabled: true
  liquibase:
    contexts: local, faker
  mvc:
    cors:
      enabled: true
      allowed-origins: "http://localhost:8100"
      allowed-methods: "GET,POST,PUT,DELETE,OPTIONS,PATCH"
      allowed-headers: "Authorization,Content-Type,Accept,Cache-Control,X-Requested-With,Origin,Referer,User-Agent,X-Request-ID,X-Correlation-ID,X-Idempotency-Key,X-JWS-Signature"
      allow-credentials: true
      max-age: 3600
    problemdetails:
      enabled: true
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
  restclient:
    connect-timeout: 5s
    read-timeout: 10s
  task:
    execution:
      thread-name-prefix: AsyncExecutor
      pool:
        core-size: 20
        max-size: 100
        queue-capacity: 1000
        keep-alive: 60s
      shutdown:
        await-termination: true
        await-termination-period: 30s
    scheduling:
      thread-name-prefix: ScheduledTask-
      pool:
        size: 20
      shutdown:
        await-termination: true
        await-termination-period: 60s
    tasks:
      report:
        enabled: false
        cron: "0 0 6 * * ?"
  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      chat:
        options:
          model: gpt-4o
  cache:
    caches:
      default:
        ttl: 1h
        initial-capacity: 5000
        maximum-size: 10000
      jwksCache:
        ttl: 1h
        initial-capacity: 20
        maximum-size: 100
      translationsCache:
        ttl: 1h
        initial-capacity: 500
        maximum-size: 2000
      citiesByNameCache:
        ttl: 1h
        initial-capacity: 500
        maximum-size: 2000
    regions:
      entityCache:
        ttl: 1h
        initial-capacity: 5000
        maximum-size: 10000
      default-update-timestamps-region:
        ttl: 1h
        initial-capacity: 5000
        maximum-size: 10000
      default-query-results-region:
        ttl: 1h
        initial-capacity: 5000
        maximum-size: 10000

  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true
  aop:
    proxy-target-class: false
    auto: true

management:
  tracing:
    enabled: false

logging:
  level:
    ROOT: DEBUG
    org.hibernate.SQL: DEBUG
    io.github.susimsek.springaisamples: DEBUG
  pattern: '%clr(%d{yyyy-MM-dd''T''HH:mm:ss.SSSXXX}){faint} %clr(%5p){highlight} %clr(${PID:- }){magenta} --- [%clr(${spring.application.name:-}){green},%X{traceId:-},%X{spanId:-},%X{requestId:-},%X{correlationId:-}] [%clr(%t){faint}] %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%clr(%wEx){red}'
  async:
    queueSize: 10000
    discardingThreshold: 0
    maxFlushTime: 5000
    includeCallerData: false
  loki:
    enabled: false
    url: http://localhost:3100/loki/api/v1/push
    inner-threads-expiration: 5m
    batch-max-items: 1000
    batch-max-bytes: 2MB
    batch-timeout: 5s
    use-direct-buffers: true
    drain-on-stop: true
    metrics-enabled: false
    drop-rate-limited-batches: false
    verbose: false
    internal-queues-check-timeout: 25ms
    retry:
      max-retries: 3
      min-retry-backoff: 500ms
      max-retry-backoff: 1m
      max-retry-jitter: 500ms
  aspect:
    enabled: true
    log-level: FULL
  http:
    enabled: true
    log-level: FULL
  obfuscate:
    enabled: true
    mask-value: "****"
    headers:
      - Authorization
      - Cookie
      - Set-Cookie
      - X-API-Key
      - X-CSRF-Token
      - WWW-Authenticate
      - X-JWS-Signature
    parameters:
      - key
      - password
      - token
      - secret
      - api_key
      - access_token
      - refresh_token
      - jws_token
      - jwe_token
    json-body-fields:
      - $.token
      - $.accessToken
      - $.refreshToken
      - $.idToken
      - $.email
      - $.secretKey
      - $.apiSecret
      - $.apiKey
      - $.jwsToken
      - $.jweToken
    method-fields:
      - $.token
      - $.accessToken
      - $.refreshToken
      - $.idToken
      - $.email
      - $.secretKey
      - $.apiSecret
      - $.apiKey
      - $.jwsToken
weather:
  client:
    api-key: ${WEATHER_API_KEY}
    api-url:  http://api.weatherapi.com/v1

security:
  content-security-policy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdn.redoc.ly; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://fonts.googleapis.com https://cdnjs.cloudflare.com; worker-src 'self' blob:; img-src 'self' https://avatars.githubusercontent.com data: https://cdn.redoc.ly; frame-src 'self' data:; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com data:"
  jwt:
    issuer: localhost
    public-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvjmNBc/Yzx2gFZmd6DhCoSUf1BnlIczVR7lxKJwCla6n9tIj3x6YXIwvZgjIb2A1I2CaqBIy7Ud6eUILJ3PHwuXGCOBCOcX7xm/a95A3NTEZKpNDNHpIISh6FF9rSR3+D52+LOuDO2kL9/aE5hwFkPk4Z/DLA8+cxuFIGuSJXStuGM6MG1vtpStKdzdt8EE+1l1vNmnpkiBnMWYZEBkmflyZB7/C53zcRttdtNBOPOHktfvEWR2JwSYctnqNXU+eE4VvVIWBvY/HhzURzAQst6GPLF7pKDjg8wpN4Dn/eSDhg7A4S9tUVPCFYzK+c+4M75ZAk31dXEkBw7nuCdEYLwIDAQAB
    private-key: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC+OY0Fz9jPHaAVmZ3oOEKhJR/UGeUhzNVHuXEonAKVrqf20iPfHphcjC9mCMhvYDUjYJqoEjLtR3p5Qgsnc8fC5cYI4EI5xfvGb9r3kDc1MRkqk0M0ekghKHoUX2tJHf4Pnb4s64M7aQv39oTmHAWQ+Thn8MsDz5zG4Uga5IldK24YzowbW+2lK0p3N23wQT7WXW82aemSIGcxZhkQGSZ+XJkHv8LnfNxG21200E484eS1+8RZHYnBJhy2eo1dT54ThW9UhYG9j8eHNRHMBCy3oY8sXukoOODzCk3gOf95IOGDsDhL21RU8IVjMr5z7gzvlkCTfV1cSQHDue4J0RgvAgMBAAECggEAGGGoAaayU1mouxwFcU5EvALWIYlwJPTsIVVTe7EDY8wPG0Oz9VUmkjYlnR5jEmNybCZlrEUo4eDXgdNFOrlMUV7CE0ErO9x0eOq9Vh3V9atlXl+hrYg+1oEppJLWXXjKp5XAWmGVYHgGYLHoNtZAoGRRJoFmhAaIQbV+WHQSZy6A6PtcpKFPAdUC+65AIBYi1gSysoFlVVCVSPSPtFMLOLCknHe3vsT5AMmYfQMiAgIE+UQqeK3IdIZ4nSSkRn+cJjjm6gBALEwuAASnGTpGHJve4PRq1fhp9Qxji7+irTOQDS/zKx54QEZ210lHQlt4WQUBpqyDlsYwISPhT2wggQKBgQD4EZ9P88B1PiqO9U6QrLxJuO80UIfr99SoAZm/dYiw9aXmPrwkdzKwQ2gGz+wsane74m+MoTj6UpPLtMtpLgK/VaGzYI+ueQ6t0sBLOhnQKlXHf3JclrOoYko01EyZJPY39pZvYYTg/IzY8tXl7HLcHa2X+cf6WKuJ3sh5j/IQkwKBgQDETn2R+dVi2fVe1re+G1gB6QaW1qRPzkpy09Nmf6lXboIeJkLhiEh44bnC8bPjQAGYooHdHgqPXI/3LK2ioE86PIQ/hYo9L6XYetYVJCjMAcbMKSqa4WQQqHNHnCpmbNhWohF8BZgtKpehx6SR9RzBBLOrqGSd6nLVyA0ssgaHdQKBgQCUx6zu/Nhu+Ov5dbK7Hn6HEL2WeL4sjiUi5mLZ65oh2BK59uJMVJk4EhVwEIArW2eYbgRNKdzMdX5i7HobCRdovekPdlh2YfCl3AKsm5ojuWBdGFj0owX5dYngCXwvVXW+tswe3TQe5BltfKdBEQEKd1pIDe0cftXTCKTgE68wtQKBgCXn/ilk88Z9zfq9PYfRIeJki+gulFXwwMGBk820ExAV/7wwqTOBrHTjKYqyP4k/P8+oeakn9uQN/KK/FtxTVlkpfGQDtljwTXcK6TH15IbYRPoBbP+xTDBHRtNqHWnf1LqN2xB2yBbYpaUQtv+UNDQ1YzhfcOZpcjlDwv+BdO9NAoGAXzA4qgD0czU54+MdxW6aT7TNJWq1Jwbb/QIEzvzgk92QhMYzCOuscCFNvLzKiEIUCyBmkMGyqmfXzM6+3CBATDa2pBa077g4EmO7/eAKgPX6grcup0PZeOEEuJiGdkb5nY4O3faZWWEFk295Ad8/8wmA1Tq8x7fvaPgokiQQg9U=
    access-token-expiration: PT1H
    id-token-expiration: PT1H
    refresh-token-expiration: PT24H
    jwe-enabled: false
  jws:
    public-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuSw55Oz/Q4GWJmnh5mJujvFwvoyPG5CBLEnRi2HzrBHMNtSt6avonGRo9x3GeOOEHSxh6k5pS2dMOdem0QMUwGzvr3ujgSi/om57qUG/OMAz5UMLXqOoLWRXVIxNE0Cu1nwFvdcxgOdEbYcfL2QmuLgIaGje/2DyfOsFc9HfdqQYr4gLQ39JeUeZ1u6noyOms/Q+jyoTLMbvDoA2U7dU0Bg+krefS7rS3SIPdRTfN96WnyNyuIa4edTOOWU8+VQCVh6CF8ahNkL/BRTLZLSPQlDhqyjA/MfuR2ZW2dGgbwjPxSVUC4ZTFIxVXYkt0GPIlLYL2hAT+1/6zONT+jsVVQIDAQAB
    private-key: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC5LDnk7P9DgZYmaeHmYm6O8XC+jI8bkIEsSdGLYfOsEcw21K3pq+icZGj3HcZ444QdLGHqTmlLZ0w516bRAxTAbO+ve6OBKL+ibnupQb84wDPlQwteo6gtZFdUjE0TQK7WfAW91zGA50Rthx8vZCa4uAhoaN7/YPJ86wVz0d92pBiviAtDf0l5R5nW7qejI6az9D6PKhMsxu8OgDZTt1TQGD6St59LutLdIg91FN833pafI3K4hrh51M45ZTz5VAJWHoIXxqE2Qv8FFMtktI9CUOGrKMD8x+5HZlbZ0aBvCM/FJVQLhlMUjFVdiS3QY8iUtgvaEBP7X/rM41P6OxVVAgMBAAECggEARA2Ga2VUPOWDnrN8I5TaR+tgwY7by0gUyQeKHL0PdhYGZMJN9hpJPyzBzMvjFKuc8rHMfHV7ygv5HirsslT9C+kdP3NjeETXBOWwydgRZFRy3heBNrNTy/bcB4UWkHRNrSLgY1ASb+rOoagupFacyndME78y8U0aYSFonBOuGiX9J2+pXKmECb4nlvFiWSQx/e9p1HcU6gc0J9q8RlNQKsPZlf8zgosPgRlG1Y5BtT9vpYSu8oNliE8fSFEPfnco9cbfrF0mseVJAHfc7xPAIhgWcy6j7IKl0FMARolfYiB7CUUkruRqX7k+/BcwdFXFeIzGYCqpIi/2X8+Rzpt+gwKBgQDryh4Wpudq7Ep9QWeBNAzjNjOxbF6rLTDJU8zdcQMILoHmcrF51XqRMmZ0O4VK49VC2aun0nV8Y4Wkzxu/ctC2V+4GVIGMsV6VBTKFwave+k1CR8kQ7ovSeU9hQ75KJ93tRMHTIPMvHEe8CLBIrVwUELyLwqG40BU9e4o0ul0VIwKBgQDJC29g23bCLKWvrM+DY0pddA3rvSWeljS83sf8qgO/7SGdcUR784FflHp8ASh85EdDK26NGyePXe9hHbaqhFJbeXVsIW6ozmwpMA9zZljKUtJAWQ681cuL0SRh52kub5nWTAeATKlfhYCQfs12m5BJjJYuKPfc8W2AF8yQx3X/JwKBgAUjPkyYDmrSAz1/c1XpYG6C+9Vd2yI3tdxtKwWYNMy01rfCwAM7l5QaWQknUtwy4q62N3tMpqqzMHJK4Pvm8I1IlTMmHDyIkNsGZfdsJOaS5aQQFF1+FSXc5tHju/25qKhG20JScXoRT67VMaIjxOHbC4CwGP4B6rSQQI6tkOGpAoGBAIPvxjM5M5GwfTdx4GkoQwhbfjtD0SlnB8sfJP1yka1lsJbDW59AqZmRNmSk2e5EXWP+X7mopWiXy93fAx6aYfX4GpBQzG9psF/DU5B3DTQR8DscduiEIeVq5kZ9+G/p+3pAQPf413qBgWLSZII/CwzJf1Fhv3A23Jagh7ZHv+8nAoGAXZJ+4/lmdDOnlgB6MHFsaAHqWYr/dS/3wwDSrWdRqkkNTUFwa/wetQ+l51bzjCf/71BKlUN48O3BzDRTX70DyK9QBu8wvXfljctClXcVSe10FbmE0I8ipHCTp7p7RbtRWos6tht2Y1UoXNHMpT/VqWjOXHvDxW4n4DQRa9Dne+A=
    jws-expiration: PT1H
  jwe:
    public-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3XqO2UAE0fDVHN5yUGmddXLjgMBOF85LMCAQ8DUVVRh2hp+cNtSvA7WoF3QtG8UYR+B2K3yh9HgOusjO7a11sPbOyssYaO2m3b3s2xy8SGGnPfDrWR/yb964x6XYhMynDLcdBKDg4D9g8EHvYbM96eTiYB6XQfJU4ECcXCEE8mJMx5oPkC01QbBOlPglMO3FTyA5UOBZ+rdMagru8q0cvdg073qf9HxilmqUQ7wMr2cvi6GXAaI8cdIcoQhlck2313IdtPdm+kwXoy3dncdFYRHhipO/pWn3kKJR0ntTknxFMdEcYsZT9XMRdhmfDfJSdxms2wFF7Ruq654fhQ4n9wIDAQAB
    private-key: MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDdeo7ZQATR8NUc3nJQaZ11cuOAwE4XzkswIBDwNRVVGHaGn5w21K8DtagXdC0bxRhH4HYrfKH0eA66yM7trXWw9s7Kyxho7abdvezbHLxIYac98OtZH/Jv3rjHpdiEzKcMtx0EoODgP2DwQe9hsz3p5OJgHpdB8lTgQJxcIQTyYkzHmg+QLTVBsE6U+CUw7cVPIDlQ4Fn6t0xqCu7yrRy92DTvep/0fGKWapRDvAyvZy+LoZcBojxx0hyhCGVyTbfXch2092b6TBejLd2dx0VhEeGKk7+lafeQolHSe1OSfEUx0RxixlP1cxF2GZ8N8lJ3GazbAUXtG6rrnh+FDif3AgMBAAECggEAX7GvG/41tvIcWpNgiA8CKjeAReaRN2b6hKouN2NwOqrNt4AqMmS109/+51dakCeaRKAe3s5EeckP8DOIeRhcBCC3m9ahzuB0G1YPC2NAlPOgm7pHLeSITz7HzveA9Gwqd2t8/b13PF0WCOksQaX9B9zN1OMSzrsiYhx4krPvm7wAlOe36r2NtFpNPLAZ8XSOIRXLAUO5GNka+mWV96Ik/yaYVKaq1e4+W+HYqxpqZO1eaiNXDJ+NhC8ImhcpcuQQ4HHIHET1CKz1eE5w99ko895OWdxvXJmxX0WZutKjlYbRFar8PadG5mP6lhNQbQRRTNBtBstWJlrc4VezDDPHsQKBgQDvGxIUf7x/mP6k7GNGBMA+bqDRwxlg6EogqCdnKOXEVayn4p2QCObCYtveGorueP2yXdaVi5BY5s1+Bql0gdG2KcTQW33IwzLnlPjKQzGnAQ81WxYrZ8j08HVhO+E6AXiWBYJhjjQa3gpasFvvEf6a1rrnGPQX+NhHg175U4byhwKBgQDtIKa6yRP64TGOQaC9sKDMkfZNUBFwCG4fLDl6C14iJ94YYfxlsnugccFhKBDHkp/dkNzhxiWKv31Xa5LxVjI+8UEnFsW+AWo8aDwt2EsynCx5gtV3Q9yre6fxS02uEkrTAqpk2Qz438PMgp1r2conjHcTQvtNVkuq3N7bqcHLEQKBgQDLlbgSPiTIXANNd3ybbIYnYliJ4d1k9sPPBH3wRxFD11LX64sOzZV1o2jjtqPeoqQYT+/aiueP2ozTJmb4LWTa/rt2UMBLxXA9YElpJkdLlApX+sNol8iyTV8UOEDv+7qpue0mlUbmLXKRfyH379FiEz02cbe8BYRZd5DRJ356VwKBgQCd68beUpfp1xvnv7FLY1xToUnFR3O1hwe/3vYQX427dY2l82viVrGasue0yrgSEYZCSv2vpwTNmKXjGJNuApfH72gSnknnNo4H2OtrJMc/116PNiDwItPNqLa6Lgp3yVrnmLjeHOdUv8Foa/xnHU5SdGvA+jTe1n/iNOJ+rFmR4QKBgB6ZoubYqOc2Yg1bnpT1aVsFsTzzn+wPTx0PslB40XxpUoBrDaru/O5FTAf/+DDtzaZxde4U1CSK2GpxLZPhUPOEQL+nqwSremZM3J0VX3DLdZZOVgJJAfvIyqOt95EOsgpYLjR6SC1BRPeYzAcqhLdIHtQHPDK9DeLFU/nyOcie
    jwe-expiration: PT1H
  admin:
    username: admin
    password: password
    name: Admin User
    email: admin@example.com


resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: COUNT_BASED
        recordExceptions:
          - java.net.ConnectException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.HttpServerErrorException
        recordFailurePredicate:
          - org.springframework.web.client.HttpClientErrorException$TooManyRequests
    instances:
      cityCircuitBreaker:
        baseConfig: default
        slidingWindowSize: 5
        minimumNumberOfCalls: 3
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 2
        slidingWindowType: COUNT_BASED
        recordExceptions:
          - java.net.ConnectException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.HttpServerErrorException
        recordFailurePredicate:
          - org.springframework.web.client.HttpClientErrorException$TooManyRequests
  ratelimiter:
    configs:
      default:
        limit-for-period: 1
        limit-refresh-period: 1s
        timeout-duration: 200ms
    instances:
      jwksRateLimiter:
        base-config: default
        limitForPeriod: 1
        limitRefreshPeriod: 1s
        timeoutDuration: 200ms